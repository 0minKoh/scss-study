// 중첩
.container {
  ul {
    li {
      .name {
        color: royalblue;
      }
      .age {
        color: orange;
      }
    }
  }
}

// & - 상위 선택자 참조
.list {
  li {
    &:last-child {
      margin-right: 0px;
    }
  }
}

// 중첩된 속성
.box {
  font: {
    weight: bold;
    size: 10px;
    family: sans-serif;
  };
  margin: {
    top: 10px;
    left: 20px;
  };
  padding: {
    bottom: 40px;
    right: 30px;
  };
}

// 변수
$size : 200px;

.container {
  position: relative;
  top: $size;
  .item {
    width: $size;
    height: $size;
    transform: translateX($size);
  }
}

// 재활용

@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.container3 {
  @include center;
  .item {
    @include center;
  }
}

// 재활용(믹스인)을 함수처럼 사용하기
@mixin center($variable: center) {
  display: flex;
  justify-content: $variable;
  align-items: $variable;
}

.container3 {
  @include center;
  .item {
    @include center(center);
  }
}

// for 반복문

// i에 1부터 10까지 순차적으로 넣어줄 것임
@for $i from 1 through 10 {
  .box:nth-child(#{$i}) {
    width: 100px * $i;
  }
}

// 함수
@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@function ratio($size, $ratio) {
  @return $size * $ratio
};

.container3 {
  @include center;
  width: ratio(300px, (9/16));
  height: ratio(200px, (9/16));
  .item {
    @include center;
  }
}

// 데이터 종류
$number : 1;
$string : bold; // relative, " "
$color : red;
$boolean: true;
$null : null;
$list : orange, royalblue, yellow;
$map: ( //자바스크립트의 객체{ } 와 유사
  o: orange,
  r: royalblue
) 